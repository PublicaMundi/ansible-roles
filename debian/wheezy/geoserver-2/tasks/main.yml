---

  - debug: var=tomcat
  - debug: var=geoserver

  ## Download and deploy GeoServer

  - set_fact:
      geoserver_package: '{{geoserver.download_url| basename}}'
  
  - stat: path=~/packages/{{geoserver_package}}
    register: geoserver_package_result

  - name: Download GeoServer
    get_url: url={{geoserver.download_url}} dest=~/packages
    when: not geoserver_package_result.stat.exists
 
  - name: Extract GeoServer WAR archive
    shell: cd /opt && 7z e -y ~/packages/{{geoserver_package}} geoserver.war
  
  - file: path=/opt/geoserver.war group=tomcat
  
  - file: path=/opt/{{tomcat_instance_name}}/webapps/geoserver state=directory owner=tomcat group=tomcat mode=0775
  
  - file: path={{geoserver.data_dir}} state=directory owner=tomcat group=tomcat mode=0775
  
  - file: path={{geoserver.log_dir}} state=directory owner=tomcat group=tomcat mode=0775

  - name: Unpack WAR under Tomcat webapps
    shell: cd /opt/{{tomcat_instance_name}}/webapps && 7z x -y -ogeoserver /opt/geoserver.war
    sudo: yes
    sudo_user: tomcat

  - name: Configure Geoserver
    template: src=geoserver/WEB-INF/web.xml dest=/opt/{{tomcat_instance_name}}/webapps/geoserver/WEB-INF/web.xml owner=tomcat group=tomcat
  
  - stat: path={{geoserver.data_dir}}/global.xml
    register: geoserver_data_result
  
  - name: Initialize Geoserver data directory
    shell: cp -r /opt/{{tomcat_instance_name}}/webapps/geoserver/data/* {{geoserver.data_dir}}
    sudo: yes
    sudo_user: tomcat
    when: not geoserver_data_result.stat.exists

